pipeline {
    agent any
    stages {
        stage('deploy app and reports') {
            steps {
               script {
               //withCredentials ([sshUserPrivateKey(credentialsId: 'oracle', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'oracle')]) {
               def remote = [:]
               remote.name = "finishline"
               remote.host = "35.88.157.54"
               remote.allowAnyHosts = true
               remote.user = 'cloud_user'
               remote.password = '2Twolove$'
               remote.pty = true
               //remote.identityFile = identity
               sh "pwd" 
               sh "ls -la Docker-compose-dir "
               sshCommand remote: remote, command: "mkdir /home/cloud_user/deployment/"
               sshPut remote: remote, from: '/Docker-compose-dir/docker-compose.yml', into: '/home/cloud_user/deployment/'
               sshCommand remote: remote, command: "sudo yum install docker -y", sudo: true
               sshCommand remote: remote, command: "sudo systemctl start docker", sudo: true
               sshCommand remote: remote, command: "sudo systemctl enable docker", sudo: true
               sshCommand remote: remote, command: "sudo usermod -aG docker cloud_user", sudo: true
               sshCommand remote: remote,command: "sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m) -o /usr/local/bin/docker-compose", sudo: true
               sshCommand remote: remote, command: "sudo chmod +x /usr/local/bin/docker-compose", sudo: true
               sshCommand remote: remote, command: "cd /home/cloud_user/deployment/"
               sshCommand remote: remote, command: "sudo docker-compose up -d", sudo: true
        }
      }
    }
  }
}